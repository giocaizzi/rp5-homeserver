name: n8n

networks:
  # Private network for n8n stack
  n8n_network:
    driver: bridge
    name: rp5_n8n
    internal: false  # Allow external access via nginx proxy
  
  # External network to connect to nginx proxy
  public_network:
    external: true
    name: rp5_public

services:
  postgres:
    image: postgres:16-alpine
    container_name: n8n_postgres
    restart: unless-stopped
    command: |
      postgres
      -c shared_buffers=64MB
      -c effective_cache_size=256MB
      -c work_mem=4MB
      -c maintenance_work_mem=32MB
      -c max_connections=20
      -c wal_level=replica
      -c max_wal_size=128MB
      -c min_wal_size=32MB
      -c wal_compression=on
      -c wal_buffers=2MB
      -c checkpoint_completion_target=0.9
      -c checkpoint_timeout=15min
      -c random_page_cost=1.1
      -c effective_io_concurrency=2
      -c log_min_duration_statement=1000
      -c log_checkpoints=on
      -c log_lock_waits=on
      -c log_temp_files=0
      -c autovacuum_max_workers=2
      -c autovacuum_vacuum_cost_limit=100
      -c bgwriter_delay=200ms
      -c bgwriter_lru_maxpages=100
      -c bgwriter_lru_multiplier=2.0
    environment:
      POSTGRES_DB: "${POSTGRES_DB:-n8n}"
      POSTGRES_USER: "${POSTGRES_USER:-n8n}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-n8n} -d ${POSTGRES_DB:-n8n}"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    labels:
      - "stack=n8n"
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"
        reservations:
          memory: 128M  # Conservative reservation
          cpus: "0.25"
    # Allow swap usage since host has swap enabled
    memswap_limit: 512M  # Allow 2x memory limit in swap
    mem_swappiness: 10   # Prefer RAM but allow swap when needed
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    # Remove direct port exposure - access via nginx proxy
    expose:
      - "5678"
    environment:
      # Network configuration
      N8N_HOST: "n8n.local"
      N8N_PORT: 5678
      N8N_PROTOCOL: "https"  # Changed to https since nginx handles SSL
      N8N_LISTEN_ADDRESS: "0.0.0.0"
      
      # Timezone
      GENERIC_TIMEZONE: "${TZ:-UTC}"
      TZ: "${TZ:-UTC}"
      
      # Database configuration
      DB_TYPE: "postgresdb"
      DB_POSTGRESDB_HOST: "postgres"
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: "${POSTGRES_DB:-n8n}"
      DB_POSTGRESDB_USER: "${POSTGRES_USER:-n8n}"
      DB_POSTGRESDB_PASSWORD: "${POSTGRES_PASSWORD}"
      DB_POSTGRESDB_SCHEMA: "public"
      DB_POSTGRESDB_SSL_ENABLED: "false"
      
      # Security configuration
      N8N_SECURE_COOKIE: "true"  # Enable secure cookies with HTTPS
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: "admin"
      N8N_BASIC_AUTH_PASSWORD: "${N8N_BASIC_AUTH_PASSWORD}"
      
      # Proxy configuration - trust nginx reverse proxy
      N8N_PROXY_HOPS: "1"  # Trust 1 hop (nginx proxy)
      
      # Performance and features
      N8N_LOG_LEVEL: "info"
      N8N_LOG_OUTPUT: "console"
      N8N_RUNNERS_ENABLED: "true"  # Enable task runners (recommended)
      EXECUTIONS_DATA_PRUNE: "true"
      EXECUTIONS_DATA_MAX_AGE: 168  # 7 days in hours
      
      
      # Webhook configuration for reverse proxy
      WEBHOOK_URL: "https://n8n.local"
      
      # Security headers
      N8N_ADDITIONAL_ALLOWED_ORIGINS: "https://n8n.local"
      
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - n8n_network
      - public_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "stack=n8n"
    security_opt:
      - no-new-privileges:true
    user: "${PUID:-1000}:${PGID:-1000}"  # Run as non-root user
    deploy:
      resources:
        limits:
          memory: 512M 
          cpus: "1.0"
        reservations:
          memory: 256M
          cpus: "0.5"
    # Allow swap usage since host has swap enabled
    memswap_limit: 1G     # Allow 2x memory limit in swap
    mem_swappiness: 10    # Prefer RAM but allow swap when needed
    tmpfs:
      - /tmp
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
  n8n_data:
    driver: local
