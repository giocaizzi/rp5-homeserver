networks:
  # Public network - for nginx proxy to reach services
  public_network:
    driver: bridge
    name: rp5_public
  
  # Infrastructure internal network
  infra_network:
    driver: bridge
    name: rp5_infra
    internal: false

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
    volumes:
      - ${NGINX_CONF_PATH}:/etc/nginx/nginx.conf:ro
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl:ro
      - ${NGINX_LOGS_PATH:-./logs/nginx}:/var/log/nginx
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - public_network
      - infra_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "stack=infrastructure"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run
    deploy:
      resources:
        limits:
          memory: 128M  # Nginx is lightweight
          cpus: "0.5"
        reservations:
          memory: 64M
          cpus: "0.25"
    # Allow swap usage since host has swap enabled
    memswap_limit: 256M   # Allow 2x memory limit in swap
    mem_swappiness: 10    # Prefer RAM but allow swap when needed
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Portainer - Docker management UI
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    # Remove direct port exposure - access via nginx proxy
    expose:
      - "9000"
      - "9443"
    volumes:
      # required to view/manage docker
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # portainer data
      - ${PORTAINER_DATA_PATH:-./data/portainer}:/data
    networks:
      - infra_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "stack=infrastructure"
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"
        reservations:
          memory: 128M
          cpus: "0.25"
    # Allow swap usage since host has swap enabled
    memswap_limit: 512M   # Allow 2x memory limit in swap
    mem_swappiness: 10    # Prefer RAM but allow swap when needed
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}
    networks:
      - infra_network
    healthcheck:
      test: ["CMD", "cloudflared", "--version"]
      interval: 60s
      timeout: 10s
      retries: 3
    labels:
      - "stack=infrastructure"
    security_opt:
      - no-new-privileges:true
    read_only: true
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: "0.25"
        reservations:
          memory: 32M
          cpus: "0.1"
    # Allow swap usage since host has swap enabled
    memswap_limit: 128M   # Allow 2x memory limit in swap
    mem_swappiness: 10    # Prefer RAM but allow swap when needed
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"